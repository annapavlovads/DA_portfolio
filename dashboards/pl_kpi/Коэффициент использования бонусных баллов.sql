--SQL-запрос предназначен для анализа использования бонусных баллов отдельными пользователями по времени их начисления и списания. 
--Запрос извлекает данные из таблицы dwh.bonus_slim_retro и рассчитывает коэффициент использования баллов (отношение списанных и 
--сгоревших баллов к начисленным). Запрос состоит из нескольких вложенных запросов, включая агрегацию и фильтрацию данных.
--Полученная информация полезна для анализа паттернов использования бонусных баллов пользователями, определения эффективности программ 
--лояльности и оценки поведения пользователей в отношении использования бонусов.

--Входные данные:
--Таблица dwh.bonus_slim_retro, содержащая информацию о начислении и списании бонусных баллов, включая даты начисления (d_created), 
--значение баллов (value) и тип операции.

--Выходные данные:
--Результатом выполнения запроса является таблица с колонками: __timestamp (дата начала дня), "Коэффициент использования баллов" 
--(отношение использованных и списанных баллов к начисленным), которая отражает поведение пользователей в использовании бонусных баллов.

--Алгоритм:
--1. Извлечение данных из таблицы dwh.bonus_slim_retro с использованием вложенного подзапроса, расчетом значений начисленных, списанных, 
--сгоревших баллов и остатка баланса.
--2. Группировка полученных данных по началу месяца (bonus_date).
--3. Расчет коэффициента использования баллов на основе полученных значений и фильтрация данных по указанному временному диапазону.
--4. Агрегация данных по началу дня и сортировка результатов по коэффициенту использования баллов в порядке убывания.

--Ожидаемый результат:
--Результатом работы запроса будет таблица, предоставляющая коэффициент использования бонусных баллов для каждого дня в указанном 
--временном диапазоне.

-----------------------------------------

SELECT toStartOfDay(toDateTime(bonus_date)) AS __timestamp,
       (SUM("Списано баллов") + sum("Баллов сгорело")) / sum("Начислено баллов") AS "Коэффициент использования баллов"
FROM
  (SELECT toStartOfMonth(toDateTime(d_created)) AS bonus_date,
          sumIf((value)/100, is_delete = 0
                and source_table = 1
                and oper_type = 'D') AS "Начислено баллов",
          ABS(sumIf((value)/100, is_delete = 0
                    and source_table = 2
                    and parent_type_id <> 6
                    and oper_type = 'C')) AS "Списано баллов",
          ABS(sumIf(value, is_delete = 0
                    and parent_type_id = 6)/100) AS "Баллов сгорело",
          sumIf((value)/100, is_delete = 0
                and source_table = 1
                and oper_type = 'D') - (ABS(sumIf((value)/100, is_delete = 0
                                                  and source_table = 2
                                                  and parent_type_id <> 6
                                                  and oper_type = 'C')) + ABS(sumIf(value, is_delete = 0
                                                                                    and parent_type_id = 6)/100)) as saldo
   FROM dwh.bonus_slim_retro
   WHERE is_delete = '0'
   GROUP BY toStartOfMonth(toDateTime(d_created))) AS virtual_table
WHERE bonus_date >= toDate('2020-05-01')
  AND bonus_date < toDate('2020-12-01')
GROUP BY toStartOfDay(toDateTime(bonus_date))
ORDER BY "Коэффициент использования баллов" DESC