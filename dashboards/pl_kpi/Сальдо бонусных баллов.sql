-- SQL-запрос используется для анализа сальдо бонусных баллов пользователей на начало каждого дня в указанном временном диапазоне. 
-- Запрос извлекает данные из таблицы dwh.bonus_slim_retro, осуществляет агрегацию и расчет сальдо баллов на начало каждого месяца 
-- и выводит информацию о сальдо на начало каждого дня в указанном диапазоне времени. Чарт, построенный на основе запроса, помогает 
-- отследить изменений сальдо бонусных баллов пользователей, а также для анализа динамики их использования, начисления и списания в 
-- определенный период времени.

-- Входные данные:
-- Таблица dwh.bonus_slim_retro, содержащая информацию о начислении и списании бонусных баллов, включая даты начисления (d_created), 
-- значение баллов (value) и тип операции.

-- Выходные данные:
-- Результатом выполнения запроса является таблица с колонками: 
-- дата начала дня
-- сальдо баллов на начало каждого дня в указанном временном диапазоне

-- Алгоритм:
-- 1. Извлечение данных из таблицы dwh.bonus_slim_retro с использованием вложенного подзапроса, 
-- расчет начисленных, списанных и сгоревших баллов, расчет сальдо баллов на начало каждого месяца
-- 2. Фильтрация данных по указанному временному диапазону начисления баллов
-- 3. Расчет сальдо баллов на начало каждого дня в указанном диапазоне времени
-- 4. Группировка данных по дням и сортировка результатов по сальдо баллов в порядке убывания

-- Ожидаемый результат:
-- Результатом работы запроса является таблица, содержащая сальдо баллов на начало каждого дня в указанном 
-- временном диапазоне, удобная для визуализации динамики метрики

--------------------------------------------------------------------------------------

SELECT toStartOfDay(toDateTime(bonus_date)) AS __timestamp,
       sum(saldo) AS "Сальдо, баллов"
FROM
  (SELECT toStartOfMonth(toDateTime(d_created)) AS bonus_date,
          sumIf((value)/100, is_delete = 0
                and source_table = 1
                and oper_type = 'D') AS "Начислено баллов",
          ABS(sumIf((value)/100, is_delete = 0
                    and source_table = 2
                    and parent_type_id <> 6
                    and oper_type = 'C')) AS "Списано баллов",
          ABS(sumIf(value, is_delete = 0
                    and parent_type_id = 6)/100) AS "Баллов сгорело",
          sumIf((value)/100, is_delete = 0
                and source_table = 1
                and oper_type = 'D') - (ABS(sumIf((value)/100, is_delete = 0
                                                  and source_table = 2
                                                  and parent_type_id <> 6
                                                  and oper_type = 'C')) + ABS(sumIf(value, is_delete = 0
                                                                                    and parent_type_id = 6)/100)) as saldo
   FROM dwh.bonus_slim_retro
   WHERE is_delete = '0'
   GROUP BY toStartOfMonth(toDateTime(d_created))) AS virtual_table
WHERE bonus_date >= toDate('2020-05-01')
  AND bonus_date < toDate('2020-12-01')
GROUP BY toStartOfDay(toDateTime(bonus_date))
ORDER BY "Сальдо, баллов" DESC
