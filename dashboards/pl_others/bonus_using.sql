--SQL-запрос предназначен для анализа использования бонусных баллов пользователей и вычисления коэффициента использования баллов. 
--Запрос извлекает данные о начислении, списании и сгорании бонусных баллов из таблицы dwh.bonus_slim_retro и рассчитывает 
--коэффициент использования баллов для анализа эффективности использования бонусных программ, а также для оценки поведения 
--пользователей в отношении использования бонусов.

--Входные данные:
--Таблица dwh.bonus_slim_retro, содержащая информацию о начислении, списании и сгорании бонусных баллов пользователей.

--Выходные данные:
--Результатом выполнения запроса является таблица со следующими колонками: __timestamp (дата начисления бонусов в формате начала дня), 
--"Коэффициент использования баллов" (рассчитанный коэффициент использования баллов).

--Алгоритм:
--1. Извлечение данных из таблицы dwh.bonus_slim_retro с использованием подзапроса и преобразование временных данных с использованием 
--вспомогательных функций (toDateTime, toStartOfDay, toStartOfMonth).
--2. Вычисление значений "Начислено баллов", "Списано баллов", "Баллов сгорело", а также остатка баллов (saldo) по заданным условиям.
--3. Фильтрация данных с использованием предиката оператора WHERE и оставление только актуальных записей.
--4. Группировка данных по месячному начислению бонусов с использованием оператора GROUP BY.
--5. Вычисление коэффициента использования баллов и его группировка по дням с использованием оператора GROUP BY.
--6. Сортировка результатов по коэффициенту использования баллов в порядке убывания.

--Ожидаемый результат:
--Результатом выполнения запроса будет таблица, содержащая информацию о коэффициенте использования бонусных баллов по каждому дню начисления.

----------------------------------------------------------------------

SELECT toStartOfDay(toDateTime(bonus_date)) AS __timestamp,
       (SUM("Списано баллов") + sum("Баллов сгорело")) / sum("Начислено баллов") AS "Коэффициент использования баллов"
FROM
  (SELECT toStartOfMonth(toDateTime(d_created)) AS bonus_date,
          sumIf((value)/100, is_delete = 0
                and source_table = 1
                and oper_type = 'D') AS "Начислено баллов",
          ABS(sumIf((value)/100, is_delete = 0
                    and source_table = 2
                    and parent_type_id <> 6
                    and oper_type = 'C')) AS "Списано баллов",
          ABS(sumIf(value, is_delete = 0
                    and parent_type_id = 6)/100) AS "Баллов сгорело",
          sumIf((value)/100, is_delete = 0
                and source_table = 1
                and oper_type = 'D') - (ABS(sumIf((value)/100, is_delete = 0
                                                  and source_table = 2
                                                  and parent_type_id <> 6
                                                  and oper_type = 'C')) + ABS(sumIf(value, is_delete = 0
                                                                                    and parent_type_id = 6)/100)) as saldo
   FROM dwh.bonus_slim_retro
   WHERE is_delete = '0'
   GROUP BY toStartOfMonth(toDateTime(d_created))) AS virtual_table

GROUP BY toStartOfDay(toDateTime(bonus_date))
ORDER BY "Коэффициент использования баллов" DESC
