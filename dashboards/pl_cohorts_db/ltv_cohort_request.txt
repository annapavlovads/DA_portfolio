select cohort, 
count(distinct contact_id) as cohort_size, 
max(diff) as max_diff, 
--имеет смысл выводить число в ячейке, если оно лежит в период от начала когорты до конца (от 0 до 7 для когорты 7-го дня и т.д.)
round(sum(case when diff = 0 then cheque_sum end) / count(distinct contact_id), 2) as day_0
, round(case when max(diff)>0 then sum(case when diff<=7 then cheque_sum end) / count(distinct contact_id) end, 0) as day_7
--какой средний чек у когорты в первые 7 дней пользования продуктом
, round(case when max(diff)>7 then sum(case when diff<=14 then cheque_sum end) / count(distinct contact_id) end, 0) as day_14
--какой средний чек у когорты в первые 14 дней пользования продуктом и т.д.
, round(case when max(diff)>14 then sum(case when diff<=30 then cheque_sum end) / count(distinct contact_id) end, 0) as day_30
, round(case when max(diff)>30 then sum(case when diff<=60 then cheque_sum end) / count(distinct contact_id) end, 0) as day_60
, round(case when max(diff)>60 then sum(case when diff<=90 then cheque_sum end) / count(distinct contact_id) end, 0) as day_90
, round(case when max(diff)>90 then sum(case when diff<=180 then cheque_sum end) / count(distinct contact_id) end, 0) as day_180
, round(case when max(diff)>180 then sum(case when diff<=365 then cheque_sum end) / count(distinct contact_id) end, 0) as day_365
, round(case when max(diff)>365 then sum(case when diff<=730 then cheque_sum end) / count(distinct contact_id) end, 0) as day_730

from 
(select contact_id, 
toDate(dt) as cheq_date, 
toStartOfMonth(dictGet('dwh.d_contact', 'first_shop_d', cityHash64(contact_id, instance_id))) as cohort, 
toDate(dt) - dictGet('dwh.d_contact', 'first_shop_d', cityHash64(contact_id, instance_id)) as diff, 
summdisc/100 as cheque_sum
from dwh.chequeitems_retro
group by contact_id, cheq_date, cohort, diff, cheque_sum
--having cohort <> '1970-01-01'
) as t1

group by cohort
having cohort > '2023-04-01'
order by cohort